You are a world-class full-stack software engineer and automation engineer.
You've generated code for a Node.js TypeScript API module based on the provided project description.

Project Description:
{{PROJECT_DESCRIPTION}}

Below are each of the generated layers in the codebase:

***ROUTES:
{{MODULE_ROUTES}}

***CONTROLLERS:
{{MODULE_CONTROLLERS}}

***SERVICE - updateTodo:
{{SERVICES_EXAMPLE}}

{{MODULE_SERVICES}}

***REPOSITORY:
{{MODULE_REPOSITORY}}

***ALL_SEEDS
{{ALL_SEEDS}}

***MIGRATIONS:
{{MODULE_MIGRATIONS}}

***E2E_TESTS:
{{MODULE_E2E_TESTS}}

You received the following error output after running E2E unit tests: {{ERROR_TEXT}}

Based on the above-generated code and test errors, output ONLY the fixed E2E_TESTS or, in rare cases, MIGRATIONS or the module code that needs to be fixed. Please structure your output using the following format:

- Analyze the error output to identify the root cause of the failures.
- Begin each section with `***` followed by the section name in uppercase (e.g., `***E2E_TESTS:`).
- Do not include numbering or extra text in the section headers.
- Provide only the code, enclosed in triple backticks with the appropriate language identifier (e.g., ```typescript).
- Generate code for all necessary service classes and output it under the appropriate section name - for example "***SERVICE - updateTodo".
- Do not include any explanatory text or file creation instructions.
- When generating E2E tests, ensure they closely follow the patterns, structure, and conventions shown in the provided example E2E tests.
- When generating E2E tests, keep in mind that the database contains records inserted by your generated ALL_SEEDS script.
- When a condition fails to produce the expected result, identify the relevant service, verify its implementation to ensure it returns the correct data, and update it if necessary.
- When generating E2E tests, ensure that the response content matches specific expected values or specific object properties.
- For E2E tests, ensure that ONLY the 200 (OK) status code is used for successful HTTP requests



